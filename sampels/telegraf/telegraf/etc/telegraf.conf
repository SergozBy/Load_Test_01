# Telegraf configuration for version 1.35.0
#
# Telegraf is entirely plugin driven. All metrics are gathered from the declared inputs,
# and sent to the declared outputs.
#
# Use 'telegraf -config telegraf.conf -test' to see what metrics a config file would generate.

###############################################################################
#                              GLOBAL TAGS                                    #
###############################################################################
[global_tags]
  # Пример задания глобальных тегов, которые будут добавляться ко всем метрикам.
  # dc = "us-east-1"
  # rack = "1a"

###############################################################################
#                             AGENT CONFIGURATION                             #
###############################################################################
[agent]
  ## Интервал сбора метрик для всех входящих плагинов
  interval = "60s"
  ## Округлять момент сбора согласно значению interval
  round_interval = true

  ## Максимальное число метрик в буфере для каждого исходящего плагина
  metric_buffer_limit = 10000
  ## Сброс буфера при его заполнении (true – сбросить, даже если не истёк flush_interval)
  flush_buffer_when_full = true

  ## Случайное смещение (jitter) перед сбором метрик
  collection_jitter = "0s"

  ## Интервал отправки накопленных метрик
  flush_interval = "1s"
  ## Дополнительное случайное смещение для flush_interval
  flush_jitter = "0s"

  ## Режим отладки (false – стандартный режим)
  debug = false
  ## Тихий режим работы (false – стандартное логирование)
  quiet = false
  ## Переопределить hostname (если оставить пустым – будет использовано os.Hostname())
  hostname = ""

###############################################################################
#                                OUTPUTS                                      #
###############################################################################

[[outputs.influxdb]]
  # URL(ы) сервера InfluxDB. В данном примере используется имя хоста "influxdb",
  # которое должно разрешаться в нужный IP (например, через настройки Docker Compose).
  urls = ["http://influxdb:8086"]
  # Название базы данных, куда будут записываться метрики.
  database = "influx"
  # Учётные данные для доступа к InfluxDB (если аутентификация включена).
  #username = "telegraf"
  #password = "metricsmetricsmetricsmetrics"
  # Таймаут для HTTP-запросов к InfluxDB.
  timeout = "5s"
  # Остальные устаревшие параметры удалены.
# skip_database_creation = true

###############################################################################
#                                INPUTS                                       #
###############################################################################

# StatsD Server
[[inputs.statsd]]
  # Базовая конфигурация StatsD. Опции, связанные с расширениями DogStatsD,
  # были удалены в версии 1.35.0.
  protocol = "udp"
  service_address = ":8125"
  # Если понадобится настроить дополнительные параметры (например, read_buffer_size),
  # их можно добавить согласно официальной документации.

# Сбор метрик CPU
[[inputs.cpu]]
  # Собирать метрики для каждого ядра (percpu)
  percpu = true
  # Собирать агрегированные метрики по всем ядрам
  totalcpu = true
  # Исключаем поля с данными о времени (raw CPU time)
  fielddrop = ["time_*"]

# Сбор метрик ядра (kernel)
[[inputs.kernel]]
  # Дополнительная настройка не требуется.

# Сбор информации о процессах системы
[[inputs.processes]]
  # Дополнительная настройка не требуется.

# Сбор системных метрик (загрузка, время работы и т.д.)
[[inputs.system]]
  # Дополнительная настройка не требуется.

# Сбор метрик по прерываниям
[[inputs.interrupts]]
  # Дополнительная настройка не требуется.

# Сбор метрик файловой системы через sysctl (только для Linux)
[[inputs.linux_sysctl_fs]]
  # Дополнительная настройка не требуется.
